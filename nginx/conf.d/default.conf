# HTTP配置 - 重定向到HTTPS
server {
    listen 80;
    server_name junyuecaihong.xyz www.junyuecaihong.xyz;
    
    # 将所有HTTP请求重定向到HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
    
    # 健康检查
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# 简化的HTTPS配置
server {
    listen 443 ssl;
    server_name junyuecaihong.xyz www.junyuecaihong.xyz;
    
    # SSL证书配置
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    
    # 静态资源处理
    location /uploads/ {
        root /var/www/public;
        expires 1y;
        add_header Cache-Control "public";
        try_files $uri =404;
    }

    location /_next/static/ {
        proxy_pass http://junyue-app:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    location / {
        proxy_pass http://junyue-app:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}

# 本地开发配置
server {
    listen 80;
    server_name localhost;

    # 静态资源处理
    location /uploads/ {
        root /var/www/public;
        expires 1y;
        add_header Cache-Control "public";
        try_files $uri =404;
    }

    location /_next/static/ {
        proxy_pass http://junyue-app:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    location / {
        proxy_pass http://junyue-app:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # 健康检查
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
